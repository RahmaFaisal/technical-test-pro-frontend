{"ast":null,"code":"import { createDraftSafeSelector } from '@reduxjs/toolkit';\nimport { patientsSelectors } from 'store/patients';\nimport { practitionersSelectors } from 'store/practitioners';\nimport { appointmentsSelectors } from 'store/appointment';\nimport { formatDateRange } from './date';\n\nvar patients = function patients(state) {\n  return patientsSelectors.selectAll(state.patients);\n};\n\nvar filterValuePatient = function filterValuePatient(state) {\n  return state.patients.filterPatient;\n};\n\nvar filteredPatients = createDraftSafeSelector([patients, filterValuePatient], function (patients, filterValuePatient) {\n  if (filterValuePatient) {\n    var list = patients.filter(function (patient) {\n      var name = patient.firstName + patient.lastName;\n      return name.toLowerCase().includes(filterValuePatient.toLowerCase());\n    });\n    return list;\n  } else {\n    return patients;\n  }\n});\n\nvar practitioners = function practitioners(state) {\n  return practitionersSelectors.selectAll(state.practitioners);\n};\n\nvar filterValuePractitioner = function filterValuePractitioner(state) {\n  return state.practitioners.filterValuePractitioner;\n};\n\nvar filteredPractitioners = createDraftSafeSelector([practitioners, filterValuePractitioner], function (practitioners, filterValuePractitioner) {\n  console.log(filterValuePractitioner);\n\n  if (filterValuePractitioner) {\n    var list = practitioners.filter(function (_ref) {\n      var firstName = _ref.firstName,\n          lastName = _ref.lastName,\n          speciality = _ref.speciality;\n      var practValues = Object.values({\n        firstName: firstName,\n        lastName: lastName,\n        speciality: speciality\n      });\n\n      for (var i = 0; i < practValues.length; i++) {\n        if (practValues[i].toLowerCase().includes(filterValuePractitioner.toLowerCase())) {\n          return true;\n        }\n      }\n\n      return false;\n    });\n    return list;\n  } else {\n    return practitioners;\n  }\n});\n\nvar filterValueAppointment = function filterValueAppointment(state) {\n  return state.appointments.filterValueAppointment;\n};\n\nvar appointment = function appointment(state) {\n  return appointmentsSelectors.selectAll(state.appointments);\n};\n\nvar practitionersState = function practitionersState(state) {\n  return state.practitioners;\n};\n\nvar patientsState = function patientsState(state) {\n  return state.patients;\n};\n\nvar getPractitById = function getPractitById(state, id) {\n  return practitionersSelectors.selectById(state, id);\n};\n\nvar getPatientById = function getPatientById(state, id) {\n  return patientsSelectors.selectById(state, id);\n};\n\nvar filteredApointment = createDraftSafeSelector([appointment, filterValueAppointment, practitionersState, patientsState], function (appointment, filterValueAppointment, practitionersState, patientsState) {\n  if (filterValueAppointment) {\n    var list = appointment.filter(function (appoint) {\n      var _getPatientById = getPatientById(patientsState, appoint.patientId),\n          patientFirstName = _getPatientById.firstName,\n          patientlastName = _getPatientById.lastName;\n\n      var _getPractitById = getPractitById(practitionersState, appoint.practitionerId),\n          firstName = _getPractitById.firstName,\n          lastName = _getPractitById.lastName,\n          speciality = _getPractitById.speciality;\n\n      var date = formatDateRange({\n        from: new Date(appoint.startDate),\n        to: new Date(appoint.endDate)\n      });\n      var SearchObject = {\n        patientFirstName: patientFirstName,\n        patientlastName: patientlastName,\n        firstName: firstName,\n        lastName: lastName,\n        speciality: speciality,\n        date: date\n      };\n      var searchValues = Object.values(SearchObject);\n\n      for (var i = 0; i < searchValues.length; i++) {\n        if (searchValues[i].toLowerCase().includes(filterValueAppointment.toLowerCase())) {\n          return true;\n        }\n      }\n\n      return false;\n    });\n    return list;\n  } else {\n    return appointment;\n  }\n});\nexport { filteredPatients, filteredPractitioners, filteredApointment };","map":null,"metadata":{},"sourceType":"module"}