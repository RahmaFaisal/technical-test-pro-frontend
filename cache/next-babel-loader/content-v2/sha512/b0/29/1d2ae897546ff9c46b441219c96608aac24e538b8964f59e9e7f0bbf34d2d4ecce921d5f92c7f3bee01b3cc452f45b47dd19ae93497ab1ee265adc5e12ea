{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect } from 'react';\nimport { Field, useFormikContext } from 'formik';\nimport config from 'config';\nimport { formatDateRange } from 'utils/date';\nimport { CircularProgress } from '@material-ui/core';\nconst SERVER_API_ENDPOINT = config.get('SERVER_API_ENDPOING', '/api');\nexport default function AvailabilitiesList(props) {\n  const {\n    availabilities,\n    setAvailabilities\n  } = props;\n  const formik = useFormikContext();\n\n  const getAvailabilities = async () => {\n    const response = await fetch(`${SERVER_API_ENDPOINT}/availabilities?practitionerId=${formik.values.practitionerId}`);\n    const parsedResponse = await response.json();\n    setAvailabilities(parsedResponse);\n  };\n\n  useEffect(() => {\n    setAvailabilities([]);\n    formik.setFieldValue('availabilityId', '');\n    if (formik.values.practitionerId) getAvailabilities();\n  }, [formik.values.practitionerId]);\n  let showList = availabilities.length || formik.values.practitionerId === '';\n  return /*#__PURE__*/_jsx(\"div\", {\n    children: showList ? /*#__PURE__*/_jsx(\"div\", {\n      className: \"avList\",\n      children: availabilities.map(availability => {\n        return /*#__PURE__*/_jsxs(\"label\", {\n          children: [/*#__PURE__*/_jsx(Field, {\n            type: \"radio\",\n            name: \"availabilityId\",\n            value: availability.id.toString()\n          }), formatDateRange({\n            from: new Date(availability.startDate),\n            to: new Date(availability.endDate)\n          })]\n        }, availability.id);\n      })\n    }) : /*#__PURE__*/_jsx(CircularProgress, {})\n  });\n}","map":null,"metadata":{},"sourceType":"module"}