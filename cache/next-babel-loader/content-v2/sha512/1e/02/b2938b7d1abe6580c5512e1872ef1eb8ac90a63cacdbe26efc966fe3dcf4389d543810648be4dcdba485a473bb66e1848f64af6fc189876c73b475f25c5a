{"ast":null,"code":"import getConfig from 'next/config';\n\nvar _ref = getConfig() || {},\n    _ref$publicRuntimeCon = _ref.publicRuntimeConfig,\n    publicRuntimeConfig = _ref$publicRuntimeCon === void 0 ? {} : _ref$publicRuntimeCon;\n\nexport default {\n  get: function get(path, defaultValue) {\n    var result = String.prototype.split.call(path, /[,[\\].]+?/).filter(Boolean).reduce(function (res, key) {\n      return res !== null && res !== undefined ? res[key] : res;\n    }, publicRuntimeConfig);\n    return result === undefined || result === publicRuntimeConfig ? defaultValue : result;\n  }\n};","map":{"version":3,"sources":["/home/rahma/Documents/rahma/technical-test-pro-frontend/config.ts"],"names":["getConfig","publicRuntimeConfig","get","path","defaultValue","result","String","prototype","split","call","filter","Boolean","reduce","res","key","undefined"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,aAAtB;;WAEqCA,SAAS,MAAM,E;iCAA5CC,mB;IAAAA,mB,sCAAsB,E;;AAE9B,eAAe;AACbC,EAAAA,GAAG,EAAE,aAACC,IAAD,EAAeC,YAAf,EAAsC;AACzC,QAAMC,MAAM,GAAGC,MAAM,CAACC,SAAP,CAAiBC,KAAjB,CACZC,IADY,CACPN,IADO,EACD,WADC,EAEZO,MAFY,CAELC,OAFK,EAGZC,MAHY,CAIX,UAACC,GAAD,EAAMC,GAAN;AAAA,aAAeD,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAKE,SAAxB,GAAoCF,GAAG,CAACC,GAAD,CAAvC,GAA+CD,GAA9D;AAAA,KAJW,EAKXZ,mBALW,CAAf;AAOA,WAAOI,MAAM,KAAKU,SAAX,IAAwBV,MAAM,KAAKJ,mBAAnC,GACHG,YADG,GAEHC,MAFJ;AAGD;AAZY,CAAf","sourcesContent":["import getConfig from 'next/config';\n\nconst { publicRuntimeConfig = {} } = getConfig() || {};\n\nexport default {\n  get: (path: string, defaultValue?: any) => {\n    const result = String.prototype.split\n      .call(path, /[,[\\].]+?/)\n      .filter(Boolean)\n      .reduce(\n        (res, key) => (res !== null && res !== undefined ? res[key] : res),\n        publicRuntimeConfig,\n      );\n    return result === undefined || result === publicRuntimeConfig\n      ? defaultValue\n      : result;\n  },\n};\n"]},"metadata":{},"sourceType":"module"}