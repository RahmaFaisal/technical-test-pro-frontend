{"ast":null,"code":"import { createDraftSafeSelector } from '@reduxjs/toolkit';\nimport { patientsSelectors } from 'store/patients';\nimport { practitionersSelectors } from 'store/practitioners';\nimport { appointmentsSelectors } from 'store/appointment';\nimport { formatDateRange } from './date';\n\nconst patients = state => patientsSelectors.selectAll(state.patients);\n\nconst filterValuePatient = state => state.patients.filterPatient;\n\nconst filteredPatients = createDraftSafeSelector([patients, filterValuePatient], (patients, filterValuePatient) => {\n  if (filterValuePatient) {\n    let list = patients.filter(patient => {\n      let name = patient.firstName + patient.lastName;\n      return name.toLowerCase().includes(filterValuePatient.toLowerCase());\n    });\n    return list;\n  } else {\n    return patients;\n  }\n});\n\nconst practitioners = state => practitionersSelectors.selectAll(state.practitioners);\n\nconst filterValuePractitioner = state => state.practitioners.filterValuePractitioner;\n\nconst filteredPractitioners = createDraftSafeSelector([practitioners, filterValuePractitioner], (practitioners, filterValuePractitioner) => {\n  console.log(filterValuePractitioner);\n\n  if (filterValuePractitioner) {\n    let list = practitioners.filter(({\n      firstName,\n      lastName,\n      speciality\n    }) => {\n      let practValues = Object.values({\n        firstName,\n        lastName,\n        speciality\n      });\n\n      for (let i = 0; i < practValues.length; i++) {\n        if (practValues[i].toLowerCase().includes(filterValuePractitioner.toLowerCase())) {\n          return true;\n        }\n      }\n\n      return false;\n    });\n    return list;\n  } else {\n    return practitioners;\n  }\n});\n\nconst filterValueAppointment = state => state.appointments.filterValueAppointment;\n\nconst appointment = state => appointmentsSelectors.selectAll(state.appointments);\n\nconst practitionersState = state => state.practitioners;\n\nconst patientsState = state => state.patients;\n\nconst getPractitById = (state, id) => practitionersSelectors.selectById(state, id);\n\nconst getPatientById = (state, id) => patientsSelectors.selectById(state, id);\n\nconst filteredApointment = createDraftSafeSelector([appointment, filterValueAppointment, practitionersState, patientsState], (appointment, filterValueAppointment, practitionersState, patientsState) => {\n  if (filterValueAppointment) {\n    let list = appointment.filter(appoint => {\n      let {\n        firstName: patientFirstName,\n        lastName: patientlastName\n      } = getPatientById(patientsState, appoint.patientId);\n      let {\n        firstName,\n        lastName,\n        speciality\n      } = getPractitById(practitionersState, appoint.practitionerId);\n      let date = formatDateRange({\n        from: new Date(appoint.startDate),\n        to: new Date(appoint.endDate)\n      });\n      let SearchObject = {\n        patientFirstName,\n        patientlastName,\n        firstName,\n        lastName,\n        speciality,\n        date\n      };\n      let searchValues = Object.values(SearchObject);\n\n      for (let i = 0; i < searchValues.length; i++) {\n        if (searchValues[i].toLowerCase().includes(filterValueAppointment.toLowerCase())) {\n          return true;\n        }\n      }\n\n      return false;\n    });\n    return list;\n  } else {\n    return appointment;\n  }\n});\nexport { filteredPatients, filteredPractitioners, filteredApointment };","map":null,"metadata":{},"sourceType":"module"}