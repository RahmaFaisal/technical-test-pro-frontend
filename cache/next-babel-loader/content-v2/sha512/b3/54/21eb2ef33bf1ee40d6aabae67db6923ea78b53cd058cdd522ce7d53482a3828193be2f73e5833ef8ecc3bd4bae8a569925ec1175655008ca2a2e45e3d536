{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Button, Card, CardActions, CardContent, CircularProgress, FormControl, InputLabel, OutlinedInput, Typography } from '@material-ui/core';\nimport { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { filterAppointmentAction } from 'store/appointment';\nimport { patientsSelectors } from 'store/patients';\nimport { practitionersSelectors } from 'store/practitioners';\nimport { formatDateRange } from 'utils/date';\nimport { deleteAppointment } from 'utils/formatAppointmentRequest';\nimport { getAppointments } from '../store/appointment';\nimport Alert from '@material-ui/lab/Alert';\nimport { filteredApointment } from 'utils/filterSelector';\n\nconst AppointmentList = () => {\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n  const appointments = filteredApointment(state);\n  const LoadingAppointment = useSelector(state => state.appointments.loading);\n  const LoadingPatients = useSelector(state => state.patients.loading);\n  const LoadingPractitioners = useSelector(state => state.practitioners.loading);\n  const practitioners = useSelector(state => state.practitioners);\n\n  const getPractitById = id => practitionersSelectors.selectById(practitioners, id);\n\n  const patients = useSelector(state => state.patients);\n\n  const getPatientById = id => patientsSelectors.selectById(patients, id);\n\n  const {\n    0: showSuccess,\n    1: setShowSuccess\n  } = useState(false);\n  useEffect(() => {\n    dispatch(getAppointments());\n  }, []);\n\n  const refreshList = () => {\n    setShowSuccess(true);\n    dispatch(getAppointments());\n  };\n\n  const onDelete = id => {\n    deleteAppointment(id, refreshList);\n  };\n\n  useEffect(() => {\n    let hideAlert;\n\n    if (showSuccess) {\n      hideAlert = setTimeout(() => {\n        setShowSuccess(false);\n      }, 2000);\n    }\n\n    return () => {\n      clearTimeout(hideAlert);\n    };\n  }, [showSuccess]);\n\n  const Appointments = () => {\n    return /*#__PURE__*/_jsx(_Fragment, {\n      children: appointments.map(appointment => {\n        const practitioner = getPractitById(appointment.practitionerId);\n        const patient = getPatientById(appointment.patientId);\n        return /*#__PURE__*/_jsx(Card, {\n          className: \"appoint\",\n          datacy: \"appoint\",\n          children: /*#__PURE__*/_jsxs(CardContent, {\n            children: [/*#__PURE__*/_jsx(Typography, {\n              variant: \"h6\",\n              className: \"title\",\n              children: formatDateRange({\n                from: new Date(appointment.startDate),\n                to: new Date(appointment.endDate)\n              })\n            }), /*#__PURE__*/_jsxs(Typography, {\n              children: [\"Practitioner Name : \", practitioner.firstName, ' ', practitioner.lastName]\n            }), /*#__PURE__*/_jsxs(Typography, {\n              children: [\"Practitioner speciality : \", practitioner.speciality, ' ']\n            }), /*#__PURE__*/_jsxs(Typography, {\n              children: [\"Patient Name : \", patient.firstName, \" \", patient.lastName]\n            }), /*#__PURE__*/_jsx(CardActions, {\n              className: \"actionContainer\",\n              children: /*#__PURE__*/_jsx(Button, {\n                onClick: () => {\n                  onDelete(appointment.id);\n                },\n                variant: \"contained\",\n                className: \"btn\",\n                color: \"secondary\",\n                style: {\n                  color: 'red'\n                },\n                size: \"small\",\n                startIcon: /*#__PURE__*/_jsx(DeleteIcon, {}),\n                children: \"Delete\"\n              })\n            })]\n          })\n        }, appointment.id);\n      })\n    });\n  };\n\n  const showLoading = LoadingAppointment || LoadingPatients || LoadingPractitioners;\n  return /*#__PURE__*/_jsx(\"div\", {\n    children: showLoading ? /*#__PURE__*/_jsx(CircularProgress, {}) : /*#__PURE__*/_jsxs(\"div\", {\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        style: {\n          height: 50,\n          width: '90%',\n          margin: 'auto'\n        },\n        children: showSuccess && /*#__PURE__*/_jsx(Alert, {\n          onClose: () => setShowSuccess(false),\n          severity: \"success\",\n          children: \"Appointment has been deleted successfully\"\n        })\n      }), /*#__PURE__*/_jsxs(FormControl, {\n        size: \"small\",\n        variant: \"outlined\",\n        fullWidth: true,\n        style: {\n          margin: '10px 0'\n        },\n        children: [/*#__PURE__*/_jsx(InputLabel, {\n          htmlFor: \"outlined-adornment-amount\",\n          children: \"Practitioner/Patient/speciality/Date\"\n        }), /*#__PURE__*/_jsx(OutlinedInput, {\n          id: \"outlined-adornment-amount\",\n          onChange: e => {\n            dispatch(filterAppointmentAction(e.target.value));\n          },\n          startAdornment: /*#__PURE__*/_jsx(SearchIcon, {}),\n          labelWidth: 260\n        })]\n      }), /*#__PURE__*/_jsx(Appointments, {})]\n    })\n  });\n};\n\nexport default AppointmentList;","map":null,"metadata":{},"sourceType":"module"}