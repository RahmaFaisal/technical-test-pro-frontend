{"ast":null,"code":"import * as Yup from 'yup';\nvar AppointmentSchema = Yup.object().shape({\n  practitionerId: Yup.string().required('Please assgin practitioner'),\n  patientId: Yup.string().required('Please choose patient '),\n  availabilityId: Yup.string().when(\"practitionerId\", {\n    is: function is(practitionerId) {\n      return practitionerId;\n    },\n    then: Yup.string().required('Please choose appointment date')\n  })\n});\nexport { AppointmentSchema };","map":{"version":3,"sources":["/home/rahma/Documents/rahma/technical-test-pro-frontend/src/consts/validationSchema.ts"],"names":["Yup","AppointmentSchema","object","shape","practitionerId","string","required","patientId","availabilityId","when","is","then"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AAEA,IAAMC,iBAAiB,GAAGD,GAAG,CAACE,MAAJ,GAAaC,KAAb,CAAmB;AACzCC,EAAAA,cAAc,EAAEJ,GAAG,CAACK,MAAJ,GACfC,QADe,CACN,4BADM,CADyB;AAGzCC,EAAAA,SAAS,EAAEP,GAAG,CAACK,MAAJ,GACVC,QADU,CACD,wBADC,CAH8B;AAKzCE,EAAAA,cAAc,EAAER,GAAG,CAACK,MAAJ,GAAaI,IAAb,CAAkB,gBAAlB,EAAmC;AAC/CC,IAAAA,EAAE,EAAC,YAACN,cAAD;AAAA,aAAkBA,cAAlB;AAAA,KAD4C;AAE/CO,IAAAA,IAAI,EAACX,GAAG,CAACK,MAAJ,GAAaC,QAAb,CAAsB,gCAAtB;AAF0C,GAAnC;AALyB,CAAnB,CAA1B;AAWA,SAASL,iBAAT","sourcesContent":["import * as Yup from 'yup';\r\n \r\nconst AppointmentSchema = Yup.object().shape({\r\n    practitionerId: Yup.string()\r\n    .required('Please assgin practitioner'),\r\n    patientId: Yup.string()\r\n    .required('Please choose patient '),\r\n    availabilityId: Yup.string().when(\"practitionerId\",{\r\n        is:(practitionerId)=>practitionerId,\r\n        then:Yup.string().required('Please choose appointment date')\r\n    }),\r\n});\r\n\r\nexport { AppointmentSchema } \r\n\r\n"]},"metadata":{},"sourceType":"module"}